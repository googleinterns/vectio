[General]
#####Config#####
# sets the transport to "HomaTransport" and the parameters for that transport.

# simulation global configuration options
simtime-scale = -15
sim-time-limit = 100000ms
cmdenv-express-mode = true
warmup-period = 0ms
network = DcnTopo
num-rngs = 1

##### Don't change the following config line. parseXMLConfig() ######
#### function in WorkloadSynthesizer class depends on this line. ####
**.host[*].trafficGeneratorApp[0].destAddresses = moduleListByPath("**.host[*]")

############# per module configuration ###############
# Note: if you modified any of the parameters under this section make sure to
# reflect appropriate changes to IPAddress assignment section in
# IPv4Configurator section in config.xml.
DcnTopo.numServersPerTor = ${numServersPerTor = 16}
DcnTopo.numTors = ${numTors = 9}
DcnTopo.fabricLinkSpeed = ${fabricLinkSpeed = 40Gbps}
DcnTopo.nicLinkSpeed = ${nicLinkSpeed = 10Gbps}
DcnTopo.edgeLinkDelay = ${edgeLinkDelay = 0.0us}
DcnTopo.fabricLinkDelay = ${fabricLinkDelay = 0.0us}
DcnTopo.hostSwTurnAroundTime = ${hostSwTurnAroundTime = 0.5us}
DcnTopo.hostNicSxThinkTime = ${hostNicSxThinkTime = 0.5us}
DcnTopo.switchFixDelay = ${switchFixDelay = 0.25us}
DcnTopo.isFabricCutThrough = ${isFabricCutThrough = false}
**.host[*].numTrafficGeneratorApp = 1
**.eth[*].queueType = "DropTailQueue"

######################## Homa Transport Parameters ###############################
**.host[*].**.rttBytes = ${RTT=0x2710} B ##10000B is the min RTT in bytes
**.host[*].transportSchemeType = "${transportSchemeType = HomaTransport}"
**.host[*].transportScheme.isRoundRobinScheduler = ${isRoundRobinScheduler = false}
**.host[*].transportScheme.useUnschRateInScheduler = ${useUnschRateInScheduler = false}
**.host[*].transportScheme.maxOutstandingRecvBytes = ${maxOutstandingRecvBytes = $RTT} B
# Possible string values: STATIC_CBF_UNIFORM, STATIC_CDF_UNIFORM, STATIC_CBF_GRADUATED
**.host[*].transportScheme.unschedPrioResolutionMode = "${unschedPrioResolutionMode = STATIC_CBF_GRADUATED}"
# Possible values 1.0/2.0, 2.0/3.0, 4.0/3.0. Lower number, mean higher priorities carry more traffic
**.host[*].transportScheme.unschedPrioUsageWeight = ${unschedPrioUsageWeight = 1}
**.host[*].transportScheme.defaultReqBytes = ${defaultReqBytes = 1442}B
**.host[*].transportScheme.defaultUnschedBytes = ${defaultUnschedBytes = 7886}B
**.host[*].transportScheme.cbfCapMsgSize = "${cbfCapMsgSize = $RTT }"
**.host[*].transportScheme.boostTailBytesPrio = "${boostTailBytesPrio = $RTT}"
**.host[*].transportScheme.senderScheme = "${senderScheme = SRBF}" #Possible values: OBSERVE_PKT_PRIOS, SRBF
**.host[*].transportScheme.accountForGrantTraffic = ${accountForGrantTraffic = true}
**.host[*].transportScheme.linkCheckBytes = ${linkCheckBytes = 1600}B 
**.host[*].transportScheme.localPort = 2222
**.host[*].transportScheme.destPort = 2222
**.eth[*].**.transportType = "HomaTransport"
**.realLoadFactor = ${rlf = 0.8}
#result-dir = results/testing/unschedPrio/LoadFactor__${rlf}--UnschedResolutionMode__${unschedPrioResolutionMode}--boostTailBytesPrio__${boostTailBytesPrio}


[Config RecordAllStats]
#enable vector recording for globalListener
**.globalListener.**.result-recording-modes = all
**.globalListener.**.vector-recording = true

#disable vector recording for all other modules
**.vector-recording = false

#WorkloadSynthesizer stats, only non templated ones are enabled
**.trafficGeneratorApp[*].sentMsg.result-recording-modes = all
**.trafficGeneratorApp[*].rcvdMsg.result-recording-modes = all
**.trafficGeneratorApp[*].msgE2EDelay.result-recording-modes = all
#**.trafficGeneratorApp[*].**.result-recording-modes = all

#HomaTransport stats
**.transportScheme.**.result-recording-modes = all

#EthernetMac stats
**.mac.txPk.result-recording-modes = all
**.mac.rxPkOk.result-recording-modes = all
**.mac.frameRcvdTimeStamptAtMAC.result-recording-modes = all
**.mac.frameSentTimeStamptAtMAC.result-recording-modes = all

#DropTailQueue stats
**.dataQueue.rcvdPk.result-recording-modes = all
**.dataQueue.queueLength.result-recording-modes = all
**.dataQueue.queueByteLength.result-recording-modes = all
**.dataQueue.queueingTime.result-recording-modes = all
**.dataQueue.requestQueueingTime.result-recording-modes = all
**.dataQueue.grantQueueingTime.result-recording-modes = all
**.dataQueue.schedDataQueueingTime.result-recording-modes = all
**.dataQueue.unschedDataQueueingTime.result-recording-modes = all

# Exclude every other stats from recording
**.result-recording-modes = -


[Config WorkloadHadoop]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_HADOOP_ALL}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =130 227 248 271 297 303 308 310 313 315 318 321 326 331 335 345 350 360 371 376 395 420 435 452 463 480 491 502 513 525 537 549 561 574 587 600 607 615 630 646 662 671 685 702 719 737 762 787 825 885 960 1063 1177 1303 1425 1559 1624 1865 2862 4582 6387 10373 31946 36844 40382 42493 44531 45913 47435 48609 49408 50632 57684 69014 74266 77041 79595 81565 91238 104584 120373 141975 167112 197911 228718 273075 406302 832442 1660940 3430822 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  1s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 5, 6, 7, 8 }
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 4, 5, 6, 7 ! prioLevels}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = $adaptiveSchedPrioLevels}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/changeSchedPrios
