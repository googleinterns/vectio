[General]
#####Config#####
# sets the transport to "HomaTransport" and the parameters for that transport.

# simulation global configuration options
simtime-scale = -15
sim-time-limit = 100000ms
cmdenv-express-mode = true
warmup-period = 0ms
network = DcnTopo
num-rngs = 1

##### Don't change the following config line. parseXMLConfig() ######
#### function in WorkloadSynthesizer class depends on this line. ####
**.host[*].trafficGeneratorApp[0].destAddresses = moduleListByPath("**.host[*]")

############# per module configuration ###############
# Note: if you modified any of the parameters under this section make sure to
# reflect appropriate changes to IPAddress assignment section in
# IPv4Configurator section in config.xml.
DcnTopo.numServersPerTor = ${numServersPerTor = 16}
DcnTopo.numTors = ${numTors = 9}
DcnTopo.fabricLinkSpeed = ${fabricLinkSpeed = 40Gbps}
DcnTopo.nicLinkSpeed = ${nicLinkSpeed = 10Gbps}
DcnTopo.edgeLinkDelay = ${edgeLinkDelay = 0.0us}
DcnTopo.fabricLinkDelay = ${fabricLinkDelay = 0.0us}
DcnTopo.hostSwTurnAroundTime = ${hostSwTurnAroundTime = 0.5us}
DcnTopo.hostNicSxThinkTime = ${hostNicSxThinkTime = 0.5us}
DcnTopo.switchFixDelay = ${switchFixDelay = 0.25us}
DcnTopo.isFabricCutThrough = ${isFabricCutThrough = false}
**.host[*].numTrafficGeneratorApp = 1
**.eth[*].queueType = "DropTailQueue"

######################## Homa Transport Parameters ###############################
#rttBytes is computed as sending one full packet in one way and a grant in the other way.
**.host[*].**.rttBytes = ${RTT=0x2710} B ##10000B is the rttBytes (ie. rtt*nicLinkSpeed).
**.host[*].transportSchemeType = "${transportSchemeType = HomaTransport}"
**.host[*].transportScheme.isRoundRobinScheduler = ${isRoundRobinScheduler = false}
**.host[*].transportScheme.useUnschRateInScheduler = ${useUnschRateInScheduler = false}
**.host[*].transportScheme.maxOutstandingRecvBytes = ${maxOutstandingRecvBytes = $RTT} B
# Possible string values: STATIC_CBF_UNIFORM, STATIC_CDF_UNIFORM, STATIC_CBF_GRADUATED
**.host[*].transportScheme.unschedPrioResolutionMode = "${unschedPrioResolutionMode = STATIC_CBF_GRADUATED}"
# Possible values 1.0/2.0, 2.0/3.0, 4.0/3.0. Lower number, mean higher priorities carry more traffic
**.host[*].transportScheme.unschedPrioUsageWeight = ${unschedPrioUsageWeight = 1}
**.host[*].transportScheme.cbfCapMsgSize = "${cbfCapMsgSize = $RTT}"
**.host[*].transportScheme.boostTailBytesPrio = "${boostTailBytesPrio = $RTT}"
**.host[*].transportScheme.defaultReqBytes = ${defaultReqBytes = 1442 }B
**.host[*].transportScheme.defaultUnschedBytes = ${defaultUnschedBytes = 7886 }B
**.host[*].transportScheme.senderScheme = "${senderScheme = SRBF}" #Possible values: OBSERVE_PKT_PRIOS, SRBF
**.host[*].transportScheme.accountForGrantTraffic = ${accountForGrantTraffic = true}
**.host[*].transportScheme.linkCheckBytes = ${linkCheckBytes = -1}B
**.host[*].transportScheme.localPort = 2222
**.host[*].transportScheme.destPort = 2222
**.eth[*].**.transportType = "HomaTransport"
**.realLoadFactor = ${rlf=0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.73, 0.77, 0.8, 0.83, 0.87, 0.9}
#result-dir = results/testing/unschedPrio/LoadFactor__${rlf}--UnschedResolutionMode__${unschedPrioResolutionMode}--boostTailBytesPrio__${boostTailBytesPrio}


[Config RecordAllStats]
#enable vector recording for globalListener
**.globalListener.**.result-recording-modes = all
**.globalListener.**.vector-recording = true

#disable vector recording for all other modules
**.vector-recording = false

#WorkloadSynthesizer stats, only non templated ones are enabled
**.trafficGeneratorApp[*].sentMsg.result-recording-modes = all
**.trafficGeneratorApp[*].rcvdMsg.result-recording-modes = all
**.trafficGeneratorApp[*].msgE2EDelay.result-recording-modes = all
#**.trafficGeneratorApp[*].**.result-recording-modes = all

#HomaTransport stats
**.transportScheme.**.result-recording-modes = all

#EthernetMac stats
**.mac.txPk.result-recording-modes = all
**.mac.rxPkOk.result-recording-modes = all
**.mac.frameRcvdTimeStamptAtMAC.result-recording-modes = all
**.mac.frameSentTimeStamptAtMAC.result-recording-modes = all

#DropTailQueue stats
**.dataQueue.rcvdPk.result-recording-modes = all
**.dataQueue.queueLength.result-recording-modes = all
**.dataQueue.queueByteLength.result-recording-modes = all
**.dataQueue.queueingTime.result-recording-modes = all
**.dataQueue.requestQueueingTime.result-recording-modes = all
**.dataQueue.grantQueueingTime.result-recording-modes = all
**.dataQueue.schedDataQueueingTime.result-recording-modes = all
**.dataQueue.unschedDataQueueingTime.result-recording-modes = all

# Exclude every other stats from recording
**.result-recording-modes = -

[Config WorkloadKeyValue]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_KEY_VALUE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 20 22 25 28 31 35 39 44 49 55 61 68 76 85 95 107 119 133 149 167 186 208 233 260 291 325 364 406 454 508 568 635 710 794 887 992 1109 1240 1386 1550 1733 1937 2166 2421 2707 3027 3384 3783 4229 4729 5286 5910 6608 7388 8259 9234 10324 11542 12904 16129 25198 49208 96093 293173 572511 1000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.657}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 3.4s, 3.4s, 2.25s, 2.25s, 2.25s, 2.25s, 2.25s, 2.25s, 2s, 2s, 2s, 2s, 2s, 1.5s, 1.5s, 1.2s, 1.2s, 1s, 0.75s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels =      1  }
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 1}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config WorkloadFabricatedHeavyHead]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FABRICATED_HEAVY_HEAD}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =51 52 53 54 55 57 58 59 61 62 63 65 67 68 70 72 74 77 79 81 84 87 90 93 97 100 104 109 113 119 124 131 138 145 154 164 175 187 202 219 239 263 293 330 378 443 534 673 909 1400 1450 1476 1532 1592 1656 1691 1764 1844 1932 1979 2080 2192 2316 2384 2533 2701 2893 2999 3238 3518 3850 4042 4487 5043 5757 6195 6705 7307 8028 8906 10355 11364 12590 13780 15625 17500 20588 25000 30172 40698 62500 400000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.883}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 4.5s, 4.5s, 4s, 4s, 3s, 3s, 3s, 3s, 2.5s, 2.5s, 2.5s, 2.5s, 2.5s, 2.5s, 2s, 2s, 1.2s, 1s, 1s! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 2}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 2}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config WorkloadGoogleSearchRpc]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = GOOGLE_SEARCH_RPC}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =2 3 4 8 32 34 36 38 40 43 46 49 53 58 64 67 71 75 80 85 91 98 107 116 128 135 142 151 160 171 183 197 213 233 256 269 284 301 320 341 366 394 427 465 512 539 569 602 640 683 731 788 853 931 1024 1078 1365 2048 3151 4096 5120 6302 7447 8192 9102 10240 11703 12603 13653 14895 16384 17246 18204 19275 20480 25206 29789 34493 40960 46811 50412 54613 59578 65536 72818 81920 93623 100825 119156 137971 163840 187246 201649 262144 308405 403298 524288 1071908 3529904}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.796}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  6.75s, 6.75s, 5.0s, 5.0s, 5.0s, 5.0s, 5.0s, 5.0s, 4.0s, 4.0s, 4.0s, 4.0s, 4.0s, 4.0s, 3.0s, 3.0s, 2.75s, 1.75s, 1.75s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels =      3  }
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 3}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config WorkloadFabricatedHeavyMiddle]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FABRICATED_HEAVY_MIDDLE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 71 72 73 75 76 77 79 81 82 84 86 88 90 92 94 96 99 101 104 107 110 113 116 120 124 128 132 136 141 147 152 158 165 172 180 189 198 209 220 233 248 265 284 306 331 362 398 443 499 571 667 803 1002 1061 1128 1203 1290 1389 1506 1644 1809 2012 2266 2593 3030 3645 4572 6134 7245 7607 8006 8450 8946 9503 10135 10857 11689 12659 13806 15180 16858 18954 21645 25226 30226 37700 50083 316228}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.892}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 9.0s, 9.0s, 6.75s, 6.75s, 6.75s, 6.75s, 6.75s, 6.75s, 5.25s, 5.25s, 5.25s, 5.25s, 5.25s, 5.25s, 4.5s, 3.75s, 3.0s, 3.0s, 3.0s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 4}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 4}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config WorkloadGoogleAllRpc]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = GOOGLE_ALL_RPC}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =3 32 36 40 46 53 64 70 77 85 96 110 128 137 146 158 171 186 205 228 256 268 282 296 313 331 352 375 402 433 469 512 531 573 597 623 683 717 755 796 843 956 1053 1117 1189 1271 1317 1418 1475 1603 1755 2137 2341 2657 3511 4535 5521 7256 9078 10335 13435 16861 21984 25170 30468 40018 45220 50244 55146 60293 65902 70217 75137 80248 85482 90049 95133 100825 110247 120372 129632 140605 150160 160275 170901 180895 190944 200864 249460 300435 350288 401080 450652 501350 603313 701172 805723 907174 1008790 5114695 10668901 20000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.887}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 9.0s, 9.0s, 6.75s, 6.75s, 6.75s, 6.75s, 6.75s, 6.75s, 5.25s, 5.25s, 5.25s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.0s, 3.0s, 3.0s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 4}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 4}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config WorkloadWebServer]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_WEB_SERVER_INTRACLUSTER}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =55 62 65 72 80 84 95 101 113 120 136 153 164 175 187 201 215 246 263 281 301 388 538 639 765 849 919 959 990 1033 1076 1187 1298 1425 1547 1598 1664 1733 1806 1889 2083 2169 2259 2449 2551 2766 2881 3088 3270 3464 3669 3887 4183 4373 4676 5000 5281 5681 6093 6581 7000 7584 8288 9000 9895 11095 12310 13659 15155 17410 19318 21695 24512 27671 31784 36182 41993 48995 57852 70941 87469 124617 154043 169888 187363 205362 222326 240691 253770 271823 283560 300000 315200 331170 347950 367019 390285 429368 565213 1000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.899}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  10.5s, 10.5s, 7.5s, 7.5s, 7.5s, 7.5s, 6.75s, 6.75s, 6.75s, 6.75s, 6.0s, 6.0s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.75s, 3.0s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 6}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 6}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config WorkloadHadoop]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_HADOOP_ALL}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =130 227 248 271 297 303 308 310 313 315 318 321 326 331 335 345 350 360 371 376 395 420 435 452 463 480 491 502 513 525 537 549 561 574 587 600 607 615 630 646 662 671 685 702 719 737 762 787 825 885 960 1063 1177 1303 1425 1559 1624 1865 2862 4582 6387 10373 31946 36844 40382 42493 44531 45913 47435 48609 49408 50632 57684 69014 74266 77041 79595 81565 91238 104584 120373 141975 167112 197911 228718 273075 406302 832442 1660940 3430822 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  10.5s, 10.5s, 7.5s, 7.5s, 7.5s, 7.5s, 6.75s, 6.75s, 6.75s, 6.75s, 6.0s, 6.0s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.75s, 3.0s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config WorkloadCacheFollower]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_CACHE_FOLLOWER_INTRACLUSTER}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =60 68 107 144 235 279 293 308 324 340 366 394 423 455 490 506 540 577 613 652 665 693 707 858 983 1055 1082 1146 1391 1435 1754 2169 2767 3887 6000 12161 20740 29687 47435 66258 94071 113930 133012 150311 164411 181304 196700 209954 225934 245121 260573 286178 305460 338223 377564 416360 500167 553812 576849 1408227 1540319 1597864 1647457 1681372 1744186 1798321 1831605 1865505 1935199 2023926 2091000 2160296 2213771 2259343 2329467 2372582 2416494 2461220 2506773 2553169 2605728 2659370 2714115 2769988 2827011 2933211 3105433 3837698}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  10.5s, 10.5s, 7.5s, 7.5s, 7.5s, 7.5s, 6.75s, 6.75s, 6.75s, 6.75s, 6.0s, 6.0s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.75s, 3.0s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config WorkloadDCTCP]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = DCTCP}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =1442 2884 4326 5768 7210 8652 10094 11536 12978 15862 17304 18746 21630 23072 24514 25956 27398 28840 31724 34608 36050 37492 40376 41818 44702 46144 47586 50470 53354 54796 57680 59122 62006 63448 66332 67774 70658 72100 74984 76426 93730 109592 126896 142758 160062 175924 191786 269654 346080 423948 500374 576800 654668 731094 808962 885388 961814 1058428 1155042 1250214 1346828 1442000 1538614 1635228 1730400 1827014 1922186 2210586 2498986 2787386 3075786 3364186 3652586 3940986 4229386 4517786 4806186 11537442 13459628 15381814 17305442 19227628 21149814 23073442 24995628 26917814 28840000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  5.25s, 5.25s, 3.75s, 3.75s, 3.75s, 3.75s, 3.4s, 3.4s, 3.4s, 3.4s, 3.0s, 3.0s, 2.6s, 2.6s, 2.25s, 1.9s, 1.9s, 1.9s, 1.5s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}



[Config TestDist]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = TEST_DIST}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.484375, 0.775}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 10s, 5s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..1 ! loadFactor}

[Config InFileDist]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = PRESET_IN_FILE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.484375, 0.775}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = preset_in_file}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 30s, 10s, 5s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}
