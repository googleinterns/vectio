[General]
#####Config#####
# sets the transport to "HomaTransport" and the parameters for that transport.

# simulation global configuration options
simtime-scale = -15
sim-time-limit = 100000ms
cmdenv-express-mode = true
warmup-period = 0ms
network = DcnTopo
num-rngs = 1

##### Don't change the following config line. parseXMLConfig() ######
#### function in WorkloadSynthesizer class depends on this line. ####
**.host[*].trafficGeneratorApp[0].destAddresses = moduleListByPath("**.host[*]")

############# per module configuration ###############
# Note: if you modified any of the parameters under this section make sure to
# reflect appropriate changes to IPAddress assignment section in
# IPv4Configurator section in config.xml.
DcnTopo.numServersPerTor = ${numServersPerTor = 16}
DcnTopo.numTors = ${numTors = 9}
DcnTopo.fabricLinkSpeed = ${fabricLinkSpeed = 40Gbps}
DcnTopo.nicLinkSpeed = ${nicLinkSpeed = 10Gbps}
DcnTopo.edgeLinkDelay = ${edgeLinkDelay = 0.0us}
DcnTopo.fabricLinkDelay = ${fabricLinkDelay = 0.0us}
DcnTopo.hostSwTurnAroundTime = ${hostSwTurnAroundTime = 0.5us}
DcnTopo.hostNicSxThinkTime = ${hostNicSxThinkTime = 0.5us}
DcnTopo.switchFixDelay = ${switchFixDelay = 0.25us}
DcnTopo.isFabricCutThrough = ${isFabricCutThrough = false}
**.host[*].numTrafficGeneratorApp = 1
**.eth[*].queueType = "DropTailQueue"

######################## Homa Transport Parameters ###############################
#rttBytes is computed as sending one full packet in one way and a grant in the other way.
**.host[*].**.rttBytes = ${RTT=0x2710} B ##10000B is the min RTT in bytes
**.host[*].transportSchemeType = "${transportSchemeType = HomaTransport}"
**.host[*].transportScheme.isRoundRobinScheduler = ${isRoundRobinScheduler = false}
**.host[*].transportScheme.useUnschRateInScheduler = ${useUnschRateInScheduler = false}
**.host[*].transportScheme.maxOutstandingRecvBytes = ${maxOutstandingRecvBytes = $RTT} B
# Possible string values: STATIC_CBF_UNIFORM, STATIC_CDF_UNIFORM, STATIC_CBF_GRADUATED
**.host[*].transportScheme.unschedPrioResolutionMode = "${unschedPrioResolutionMode = STATIC_CBF_GRADUATED}"
# Possible values 1.0/2.0, 2.0/3.0, 4.0/3.0. Lower number, mean higher priorities carry more traffic
**.host[*].transportScheme.unschedPrioUsageWeight = ${unschedPrioUsageWeight = 1}
**.host[*].transportScheme.defaultReqBytes = ${defaultReqBytes = 1442 }B
**.host[*].transportScheme.defaultUnschedBytes = ${defaultUnschedBytes = 7886 }B
**.host[*].transportScheme.cbfCapMsgSize = "${cbfCapMsgSize = $RTT }"
**.host[*].transportScheme.boostTailBytesPrio = "${boostTailBytesPrio = $RTT }"
**.host[*].transportScheme.senderScheme = "${senderScheme = SRBF}" #Possible values: OBSERVE_PKT_PRIOS, SRBF
**.host[*].transportScheme.accountForGrantTraffic = ${accountForGrantTraffic = true}
**.host[*].transportScheme.linkCheckBytes = ${linkCheckBytes = -1}B
**.host[*].transportScheme.localPort = 2222
**.host[*].transportScheme.destPort = 2222
**.eth[*].**.transportType = "HomaTransport"
**.realLoadFactor = ${rlf = 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.73, 0.77, 0.8, 0.83, 0.87, 0.9, .92}
#result-dir = results/testing/unschedPrio/LoadFactor__${rlf}--UnschedResolutionMode__${unschedPrioResolutionMode}--boostTailBytesPrio__${boostTailBytesPrio}


[Config RecordAllStats]
#enable vector recording for globalListener
**.globalListener.**.result-recording-modes = all
**.globalListener.**.vector-recording = true

#disable vector recording for all other modules
**.vector-recording = false

#WorkloadSynthesizer stats, only non templated ones are enabled
**.trafficGeneratorApp[*].sentMsg.result-recording-modes = all
**.trafficGeneratorApp[*].rcvdMsg.result-recording-modes = all
**.trafficGeneratorApp[*].msgE2EDelay.result-recording-modes = all
#**.trafficGeneratorApp[*].**.result-recording-modes = all

#HomaTransport stats
**.transportScheme.**.result-recording-modes = all

#EthernetMac stats
**.mac.txPk.result-recording-modes = all
**.mac.rxPkOk.result-recording-modes = all
**.mac.frameRcvdTimeStamptAtMAC.result-recording-modes = all
**.mac.frameSentTimeStamptAtMAC.result-recording-modes = all

#DropTailQueue stats
**.dataQueue.rcvdPk.result-recording-modes = all
**.dataQueue.queueLength.result-recording-modes = all
**.dataQueue.queueByteLength.result-recording-modes = all
**.dataQueue.queueingTime.result-recording-modes = all
**.dataQueue.requestQueueingTime.result-recording-modes = all
**.dataQueue.grantQueueingTime.result-recording-modes = all
**.dataQueue.schedDataQueueingTime.result-recording-modes = all
**.dataQueue.unschedDataQueueingTime.result-recording-modes = all

# Exclude every other stats from recording
**.result-recording-modes = -


[Config WorkloadFabricatedHeavyMiddle]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FABRICATED_HEAVY_MIDDLE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 71 72 73 75 76 77 79 81 82 84 86 88 90 92 94 96 99 101 104 107 110 113 116 120 124 128 132 136 141 147 152 158 165 172 180 189 198 209 220 233 248 265 284 306 331 362 398 443 499 571 667 803 1002 1061 1128 1203 1290 1389 1506 1644 1809 2012 2266 2593 3030 3645 4572 6134 7245 7607 8006 8450 8946 9503 10135 10857 11689 12659 13806 15180 16858 18954 21645 25226 30226 37700 50083 316228}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.892}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 9.0s, 9.0s, 6.75s, 6.75s, 6.75s, 6.75s, 6.75s, 6.75s, 5.25s, 5.25s, 5.25s, 5.25s, 5.25s, 5.25s, 4.5s, 3.75s, 3.0s, 3.0s, 3.0s, 2.8s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..19 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 2, 4, 6, 8 }
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 1, 2, 3, 4 ! prioLevels}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = $adaptiveSchedPrioLevels}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/nsdi2018/changeRedundancy/prioLevel--${prioLevels}



[Config WorkloadGoogleAllRpc]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = GOOGLE_ALL_RPC}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =3 32 36 40 46 53 64 70 77 85 96 110 128 137 146 158 171 186 205 228 256 268 282 296 313 331 352 375 402 433 469 512 531 573 597 623 683 717 755 796 843 956 1053 1117 1189 1271 1317 1418 1475 1603 1755 2137 2341 2657 3511 4535 5521 7256 9078 10335 13435 16861 21984 25170 30468 40018 45220 50244 55146 60293 65902 70217 75137 80248 85482 90049 95133 100825 110247 120372 129632 140605 150160 160275 170901 180895 190944 200864 249460 300435 350288 401080 450652 501350 603313 701172 805723 907174 1008790 5114695 10668901 20000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.887}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 9.0s, 9.0s, 6.75s, 6.75s, 6.75s, 6.75s, 6.75s, 6.75s, 5.25s, 5.25s, 5.25s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.0s, 3.0s, 3.0s, 2.7s! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..19 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 2, 4, 6, 8 }
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 1, 2, 3, 4 ! prioLevels}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = $adaptiveSchedPrioLevels}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/nsdi2018/changeRedundancy/prioLevel--${prioLevels}



[Config WorkloadHadoop]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_HADOOP_ALL}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =130 227 248 271 297 303 308 310 313 315 318 321 326 331 335 345 350 360 371 376 395 420 435 452 463 480 491 502 513 525 537 549 561 574 587 600 607 615 630 646 662 671 685 702 719 737 762 787 825 885 960 1063 1177 1303 1425 1559 1624 1865 2862 4582 6387 10373 31946 36844 40382 42493 44531 45913 47435 48609 49408 50632 57684 69014 74266 77041 79595 81565 91238 104584 120373 141975 167112 197911 228718 273075 406302 832442 1660940 3430822 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  10.5s, 10.5s, 7.5s, 7.5s, 7.5s, 7.5s, 6.75s, 6.75s, 6.75s, 6.75s, 6.0s, 6.0s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.75s, 3.0s, 2.7s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..19 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 2, 3, 4, 5, 6, 8 }
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 1, 2, 3, 4, 5, 7 ! prioLevels}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = $adaptiveSchedPrioLevels}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/nsdi2018/changeRedundancy/prioLevel--${prioLevels}



[Config WorkloadDCTCP]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = DCTCP}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =1442 2884 4326 5768 7210 8652 10094 11536 12978 15862 17304 18746 21630 23072 24514 25956 27398 28840 31724 34608 36050 37492 40376 41818 44702 46144 47586 50470 53354 54796 57680 59122 62006 63448 66332 67774 70658 72100 74984 76426 93730 109592 126896 142758 160062 175924 191786 269654 346080 423948 500374 576800 654668 731094 808962 885388 961814 1058428 1155042 1250214 1346828 1442000 1538614 1635228 1730400 1827014 1922186 2210586 2498986 2787386 3075786 3364186 3652586 3940986 4229386 4517786 4806186 11537442 13459628 15381814 17305442 19227628 21149814 23073442 24995628 26917814 28840000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  10.5s, 10.5s, 7.5s, 7.5s, 7.5s, 7.5s, 6.75s, 6.75s, 6.75s, 6.75s, 6.0s, 6.0s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.75s, 3.0s, 2.7s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..19 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 2, 3, 4, 5, 6, 7, 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 1, 2, 3, 4, 5, 6, 7 ! prioLevels}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = $adaptiveSchedPrioLevels}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/nsdi2018/changeRedundancy/prioLevel--${prioLevels}
